rules:
  - id: express_open_redirect
    options:
      symbolic_propagation: true
    patterns:
      - pattern-either:
        - pattern-inside: function ($REQ, $RES, ...) {...}
        - pattern-inside: function $FUNC($REQ, $RES, ...) {...}
        - pattern-inside: $X = function $FUNC($REQ, $RES, ...) {...}
        - pattern-inside: var $X = function $FUNC($REQ, $RES, ...) {...};
        - pattern-inside: $APP.$METHOD(..., function $FUNC($REQ, $RES, ...) {...})
      - pattern-either:
          - pattern: |
              $X.redirect(..., <... $REQ.$QUERY ...>, ...)
          - pattern: |
              $X.redirect(..., <... $REQ.$QUERY.$FOO ...>, ...)
    message: >-
      Untrusted user input in redirect() can result in Open Redirect
      vulnerability.
    languages:
      - javascript
    severity: ERROR
    metadata:
      owasp-web: a1
      cwe: cwe-601
  - id: express_open_redirect2
    options:
      symbolic_propagation: true
    patterns:
      - pattern-inside: |
          $APP.$METHOD(..., function $FUNC($REQ, $RES) { ... })
      - pattern-either:
        - pattern: |
            $RES.header(..., "=~/location/i", <... $REQ.$VAR ...>, ...)
        - pattern: |
            $RES.header(..., "=~/location/i", <... $REQ.$VAR.$VARR ...>, ...)
        - pattern: |
            $RES.writeHead(..., "=~/location/i", <... $REQ.$VAR ...>, ...)
        - pattern: |
            $RES.writeHead(..., "=~/location/i", <... $REQ.$VAR.$VARR ...>, ...)
        - pattern: |
            $RES.writeHead(..., {"=~/location/i": <... $REQ.$VAR ...> }, ...)
        - pattern: |
            $RES.writeHead(..., {"=~/location/i": <... $REQ.$VAR.$VARR ...> }, ...)
    message: >-
      Untrusted user input in response header('Location') can result in Open
      Redirect vulnerability.
    languages:
      - javascript
    severity: ERROR
    metadata:
      owasp-web: a1
      cwe: cwe-601